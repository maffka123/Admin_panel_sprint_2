# Generated by Django 3.1 on 2021-01-25 18:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FilmWork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='название')),
                ('plot', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('ratings', models.CharField(blank=True, max_length=100, null=True, verbose_name='рейтинг')),
                ('imdb_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('film_creation_date', models.DateField(blank=True, null=True, verbose_name='дата создания')),
                ('age_limit', models.CharField(blank=True, max_length=5, null=True, verbose_name='возраст')),
                ('link', models.CharField(blank=True, max_length=100, null=True, verbose_name='ссылка')),
                ('video_type', models.CharField(blank=True, default='movie', max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'кинопроизведение',
                'verbose_name_plural': 'кинопроизведения',
                'db_table': 'film_work',
            },
        ),
        migrations.CreateModel(
            name='FilmWorkPerson',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork')),
            ],
            options={
                'db_table': 'film_work_person',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='название')),
                ('created_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'жанр',
                'verbose_name_plural': 'жанры',
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('role', models.CharField(max_length=100, verbose_name='role')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('movie', models.ManyToManyField(through='movies.FilmWorkPerson', to='movies.FilmWork')),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.AddField(
            model_name='filmworkperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.person'),
        ),
        migrations.CreateModel(
            name='FilmWorkGenre',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('genre', models.ForeignKey(db_column='genre_id', on_delete=django.db.models.deletion.CASCADE, to='movies.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_id', to='movies.filmwork')),
            ],
            options={
                'db_table': 'film_work_genre',
                'unique_together': {('movie', 'genre')},
            },
        ),
        migrations.AddField(
            model_name='filmwork',
            name='genre',
            field=models.ManyToManyField(through='movies.FilmWorkGenre', to='movies.Genre'),
        ),
        migrations.AddField(
            model_name='filmwork',
            name='people',
            field=models.ManyToManyField(through='movies.FilmWorkPerson', to='movies.Person'),
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
            ],
            options={
                'verbose_name': 'актёр',
                'verbose_name_plural': 'актёры',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.person',),
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
            ],
            options={
                'verbose_name': 'режисёр',
                'verbose_name_plural': 'режисёры',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.person',),
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
            ],
            options={
                'verbose_name': 'фильм',
                'verbose_name_plural': 'фильмы',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.filmwork',),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
            ],
            options={
                'verbose_name': 'сериал',
                'verbose_name_plural': 'сериалы',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.filmwork',),
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
            ],
            options={
                'verbose_name': 'сценарист',
                'verbose_name_plural': 'сценаристы',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.person',),
        ),
        migrations.AlterUniqueTogether(
            name='filmworkperson',
            unique_together={('movie', 'person')},
        ),
    ]
